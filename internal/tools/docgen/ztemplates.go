// Code generated by assets compiler. DO NOT EDIT.
	
package main

var (
	templates = map[string]string{
"/readme.tmpl": "<p align=\"center\">\n  <img src=\"logo.svg\" width=\"40%\" border=\"0\" alt=\"addchain\" />\n</p>\n\n<p align=\"center\">Cryptographic Addition Chain Generation in Go</p>\n\n`addchain` generates short addition chains for exponents of cryptographic\ninterest, with [results](#results) close to or exceeding the best\nhand-optimized chains.\n\n* Suite of algorithms from **academic research**: continued fractions methods\n  of Bergeron-Berstel-Brlek-Duboc, dictionary-based approaches and Bos-Coster\n  heuristics.\n* **Novel techniques** exploiting structure of cryptographic exponents: custom\n  run-length method with excellent results on Solinas primes\n\n## Results\n\n| Name | _N_ | _d_ | Length | Best | Delta |\n| ---- | --- | --- | -----: | ---: | ----: |\n{{ range .Results -}}\n{{- if gt .BestKnown 0 -}}\n| {{ .Name }} | {{ if lt (len .N.String) 30 }}`{{ .N }}`{{ else }}_too long_{{ end }} | {{ .D }} | {{ .Length }} | {{ .BestKnown }} | {{ printf \"%+d\" .Delta }} |\n{{ end -}}\n{{ end }}\n",
"/results.tmpl": "# Results\n\n{{ range .Results -}}\n## {{ .Name }}\n\n| Property | Value |\n| --- | ----- |\n| _N_ | `{{ .N.String }}` |\n| _d_ | `{{ .D }}` |\n| _N_-_d_ | `{{ printf \"%x\" .Target }}` |\n| Length | {{ .Length }} |\n{{- if gt .BestKnown 0 }}\n| Best Known | {{ .BestKnown }} |\n| Delta | {{ printf \"%+d\" .Delta }} |\n{{ end }}\n\nAddition chain produced by `addchain`:\n\n```go\n{{ include (printf \"internal/results/testdata/%s.golden\" .Slug) }}```\n\n{{ end }}\n",
}
)